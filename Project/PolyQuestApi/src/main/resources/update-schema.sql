CREATE TABLE acad_interest
(
    id                     INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    studentacadinterest_id INTEGER                                  NOT NULL,
    name                   VARCHAR(255),
    created_at             TIMESTAMP WITHOUT TIME ZONE,
    updated_at             TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_acadinterest PRIMARY KEY (id)
);

CREATE TABLE acad_performance
(
    id                        INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    studentacadperformance_id INTEGER                                  NOT NULL,
    name                      VARCHAR(255),
    created_at                TIMESTAMP WITHOUT TIME ZONE,
    updated_at                TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_acadperformance PRIMARY KEY (id)
);

CREATE TABLE bookmark
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    course_id  INTEGER                                  NOT NULL,
    student_id INTEGER                                  NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE,
    updated_at TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_bookmark PRIMARY KEY (id)
);

CREATE TABLE course
(
    id                 INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    course_name        VARCHAR(255),
    course_description VARCHAR(255),
    created_at         TIMESTAMP WITHOUT TIME ZONE,
    updated_at         TIMESTAMP WITHOUT TIME ZONE,
    school_name        VARCHAR(255),
    CONSTRAINT pk_course PRIMARY KEY (id)
);

CREATE TABLE course_career_prospect
(
    course_id       INTEGER NOT NULL,
    career_prospect VARCHAR(255)
);

CREATE TABLE course_key_skills
(
    course_id  INTEGER NOT NULL,
    key_skills VARCHAR(255)
);

CREATE TABLE feedback
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    student_id INTEGER                                  NOT NULL,
    message    VARCHAR(255),
    created_at TIMESTAMP WITHOUT TIME ZONE,
    updated_at TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_feedback PRIMARY KEY (id)
);

CREATE TABLE feedback_answer
(
    id                  INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    answer              INTEGER                                  NOT NULL,
    feedback_id         INTEGER,
    feedbackquestion_id INTEGER,
    created_at          TIMESTAMP WITHOUT TIME ZONE,
    updated_at          TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_feedbackanswer PRIMARY KEY (id)
);

CREATE TABLE feedback_question
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    message    INTEGER                                  NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE,
    updated_at TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_feedbackquestion PRIMARY KEY (id)
);

CREATE TABLE question
(
    id            INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    question_text VARCHAR(255),
    created_at    TIMESTAMP WITHOUT TIME ZONE,
    updated_at    TIMESTAMP WITHOUT TIME ZONE,
    test_id       INTEGER                                  NOT NULL,
    CONSTRAINT pk_question PRIMARY KEY (id)
);

CREATE TABLE recommendation
(
    id                   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    test_id              INTEGER                                  NOT NULL,
    recommendation_score DOUBLE PRECISION                         NOT NULL,
    student_id           INTEGER                                  NOT NULL,
    created_at           TIMESTAMP WITHOUT TIME ZONE,
    updated_at           TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_recommendation PRIMARY KEY (id)
);

CREATE TABLE recommendation_course
(
    course_id         INTEGER NOT NULL,
    recommendation_id INTEGER NOT NULL
);

CREATE TABLE response
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    test_id     INTEGER                                  NOT NULL,
    question_id INTEGER                                  NOT NULL,
    response    INTEGER                                  NOT NULL,
    created_at  TIMESTAMP WITHOUT TIME ZONE,
    updated_at  TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_response PRIMARY KEY (id)
);

CREATE TABLE student
(
    id                   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name                 VARCHAR(255),
    email                VARCHAR(255),
    password             VARCHAR(255),
    created_at           TIMESTAMP WITHOUT TIME ZONE,
    updated_at           TIMESTAMP WITHOUT TIME ZONE,
    oauth_fb             VARCHAR(255),
    oauth_google         VARCHAR(255),
    is_email_password    BOOLEAN,
    auth_method          VARCHAR(255),
    auth_attempts        INTEGER                                  NOT NULL,
    last_auth_attempt_at TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_student PRIMARY KEY (id)
);

CREATE TABLE student_acad_interest
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    student_id INTEGER                                  NOT NULL,
    rating     INTEGER                                  NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE,
    updated_at TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_studentacadinterest PRIMARY KEY (id)
);

CREATE TABLE student_acad_performance
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    student_id INTEGER                                  NOT NULL,
    grade      VARCHAR(255),
    created_at TIMESTAMP WITHOUT TIME ZONE,
    updated_at TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_studentacadperformance PRIMARY KEY (id)
);

CREATE TABLE test
(
    id              INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    student_id      INTEGER                                  NOT NULL,
    is_testcomplete BOOLEAN                                  NOT NULL,
    created_at      TIMESTAMP WITHOUT TIME ZONE,
    updated_at      TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_test PRIMARY KEY (id)
);

ALTER TABLE feedback
    ADD CONSTRAINT uc_feedback_student UNIQUE (student_id);

ALTER TABLE response
    ADD CONSTRAINT uc_response_question UNIQUE (question_id);

ALTER TABLE acadinterest
    ADD CONSTRAINT FK_ACADINTEREST_ON_STUDENTACADINTEREST FOREIGN KEY (studentacadinterest_id) REFERENCES studentacadinterest (id);

ALTER TABLE acadperformance
    ADD CONSTRAINT FK_ACADPERFORMANCE_ON_STUDENTACADPERFORMANCE FOREIGN KEY (studentacadperformance_id) REFERENCES studentacadperformance (id);

ALTER TABLE bookmark
    ADD CONSTRAINT FK_BOOKMARK_ON_COURSE FOREIGN KEY (course_id) REFERENCES course (id);

ALTER TABLE bookmark
    ADD CONSTRAINT FK_BOOKMARK_ON_STUDENT FOREIGN KEY (student_id) REFERENCES student (id);

ALTER TABLE feedbackanswer
    ADD CONSTRAINT FK_FEEDBACKANSWER_ON_FEEDBACK FOREIGN KEY (feedback_id) REFERENCES feedback (id);

ALTER TABLE feedbackanswer
    ADD CONSTRAINT FK_FEEDBACKANSWER_ON_FEEDBACKQUESTION FOREIGN KEY (feedbackquestion_id) REFERENCES feedbackquestion (id);

ALTER TABLE feedback
    ADD CONSTRAINT FK_FEEDBACK_ON_STUDENT FOREIGN KEY (student_id) REFERENCES student (id);

ALTER TABLE question
    ADD CONSTRAINT FK_QUESTION_ON_TEST FOREIGN KEY (test_id) REFERENCES test (id);

ALTER TABLE recommendation
    ADD CONSTRAINT FK_RECOMMENDATION_ON_STUDENT FOREIGN KEY (student_id) REFERENCES student (id);

ALTER TABLE recommendation
    ADD CONSTRAINT FK_RECOMMENDATION_ON_TEST FOREIGN KEY (test_id) REFERENCES test (id);

ALTER TABLE response
    ADD CONSTRAINT FK_RESPONSE_ON_QUESTION FOREIGN KEY (question_id) REFERENCES question (id);

ALTER TABLE response
    ADD CONSTRAINT FK_RESPONSE_ON_TEST FOREIGN KEY (test_id) REFERENCES test (id);

ALTER TABLE studentacadinterest
    ADD CONSTRAINT FK_STUDENTACADINTEREST_ON_STUDENT FOREIGN KEY (student_id) REFERENCES student (id);

ALTER TABLE studentacadperformance
    ADD CONSTRAINT FK_STUDENTACADPERFORMANCE_ON_STUDENT FOREIGN KEY (student_id) REFERENCES student (id);

ALTER TABLE test
    ADD CONSTRAINT FK_TEST_ON_STUDENT FOREIGN KEY (student_id) REFERENCES student (id);

ALTER TABLE course_career_prospect
    ADD CONSTRAINT fk_course_careerprospect_on_course FOREIGN KEY (course_id) REFERENCES course (id);

ALTER TABLE course_key_skills
    ADD CONSTRAINT fk_course_keyskills_on_course FOREIGN KEY (course_id) REFERENCES course (id);

ALTER TABLE recommendation_course
    ADD CONSTRAINT fk_reccou_on_course FOREIGN KEY (course_id) REFERENCES course (id);

ALTER TABLE recommendation_course
    ADD CONSTRAINT fk_reccou_on_recommendation FOREIGN KEY (recommendation_id) REFERENCES recommendation (id);